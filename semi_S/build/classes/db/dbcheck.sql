DROP SEQUENCE BOARDNO_SQ;
DROP SEQUENCE BOARDREPLY_SQ;
DROP SEQUENCE GROUPNO_SQ;
DROP SEQUENCE QNA_BOARD_SQ;

CREATE SEQUENCE BOARDNO_SQ NOCACHE;
CREATE SEQUENCE BOARDREPLY_SQ NOCACHE;
CREATE SEQUENCE GROUPNO_SQ NOCACHE;
CREATE SEQUENCE QNA_BOARD_SQ NOCACHE;

-- 부품 SEQ -- 
DROP SEQUENCE CPU_SQ;
DROP SEQUENCE MAINBOARD_SQ;
DROP SEQUENCE RAM_SQ;
DROP SEQUENCE GRAPHIC_SQ;
DROP SEQUENCE SSD_SQ;
DROP SEQUENCE POWER_SQ;
DROP SEQUENCE CASE_SQ;
DROP SEQUENCE COOLER_SQ;
DROP SEQUENCE GUIDE_SQ;
--가이드 SQ 뺴도됨

CREATE SEQUENCE CPU_SQ NOCACHE;
CREATE SEQUENCE MAINBOARD_SQ NOCACHE;
CREATE SEQUENCE RAM_SQ NOCACHE;
CREATE SEQUENCE GRAPHIC_SQ NOCACHE;
CREATE SEQUENCE SSD_SQ NOCACHE;
CREATE SEQUENCE POWER_SQ NOCACHE;
CREATE SEQUENCE CASE_SQ NOCACHE;
CREATE SEQUENCE COOLER_SQ NOCACHE;
CREATE SEQUENCE GUIDE_SQ NOCACHE;

-- 테이블 --
DROP TABLE CPU_B;
DROP TABLE MAINBOARD_B;
DROP TABLE RAM_B;
DROP TABLE GRAPHIC_B;
DROP TABLE SSD_B;
DROP TABLE POWER_B;
DROP TABLE CASE_B;
DROP TABLE COOLER_B;
DROP TABLE GUIDE_B;
DROP TABLE FAVPC_B;
DROP TABLE MEMBER_B;
DROP TABLE QNA_B;
DROP TABLE BOARD;
DROP TABLE BOARDREPLY_B;


-------테이블 만들기  ------------- 
CREATE TABLE CPU_B(
	CPUNUM NUMBER PRIMARY KEY, 
	NAME VARCHAR2(2000) NOT NULL,
	PRICE NUMBER NOT NULL,
	PIC VARCHAR2(1000) NOT NULL
);

CREATE TABLE MAINBOARD_B(
	MBNUM NUMBER PRIMARY KEY, 
	NAME VARCHAR2(2000) NOT NULL,
	PRICE NUMBER NOT NULL,
	PIC VARCHAR2(1000) NOT NULL
);

CREATE TABLE RAM_B(
	RAMNUM NUMBER PRIMARY KEY,
	NAME VARCHAR2(2000) NOT NULL,
	PRICE NUMBER NOT NULL,
	AMOUNT NUMBER NOT NULL,
	PIC VARCHAR2(1000) NOT NULL
);

CREATE TABLE GRAPHIC_B(
	GRAPHICNUM NUMBER PRIMARY KEY, 
	NAME VARCHAR2(2000) NOT NULL,
	PRICE NUMBER NOT NULL,
	PIC VARCHAR2(1000) NOT NULL
);

CREATE TABLE SSD_B(
	SSDNUM NUMBER PRIMARY KEY, 
	NAME VARCHAR2(2000) NOT NULL,
	PRICE NUMBER NOT NULL,
	PIC VARCHAR2(1000) NOT NULL
);

CREATE TABLE COOLER_B(
	COOLNUM NUMBER PRIMARY KEY, 
	NAME VARCHAR2(2000) NOT NULL,
	PRICE NUMBER NOT NULL,
	PIC VARCHAR2(1000) NOT NULL
);

CREATE TABLE POWER_B(
	POWERNUM NUMBER PRIMARY KEY, 
	NAME VARCHAR2(2000) NOT NULL,
	PRICE NUMBER NOT NULL,
	PIC VARCHAR2(1000) NOT NULL
);

CREATE TABLE CASE_B(
	CASENUM NUMBER PRIMARY KEY, 
	NAME VARCHAR2(2000) NOT NULL,
	PRICE NUMBER NOT NULL,
	PIC VARCHAR2(1000) NOT NULL
);

CREATE TABLE GUIDE_B(
	GUIDE VARCHAR2(1000) PRIMARY KEY, 
	CPUNUM NUMBER NOT NULL,
	MBNUM NUMBER NOT NULL, 
	RAMNUM NUMBER NOT NULL,
	RAMAMOUNT NUMBER NOT NULL,
	GRAPHICNUM NUMBER, 
	SSDNUM NUMBER NOT NULL,
	COOLNUM NUMBER,
	POWERNUM NUMBER NOT NULL, 
	CASENUM NUMBER NOT NULL,
	TOTALPRICE NUMBER NOT NULL,
	CONSTRAINT FK_GB_CPUNUM FOREIGN KEY (CPUNUM) REFERENCES CPU_B(CPUNUM) ON DELETE CASCADE,
	CONSTRAINT FK_GB_MBNUM FOREIGN KEY (MBNUM) REFERENCES MAINBOARD_B(MBNUM) ON DELETE CASCADE,
	CONSTRAINT FK_GB_RAMNUM FOREIGN KEY (RAMNUM) REFERENCES RAM_B(RAMNUM) ON DELETE CASCADE,
	CONSTRAINT FK_GB_GRAPHICNUM FOREIGN KEY (GRAPHICNUM) REFERENCES GRAPHIC_B(GRAPHICNUM) ON DELETE CASCADE,
	CONSTRAINT FK_GB_SSDNUM FOREIGN KEY (SSDNUM) REFERENCES SSD_B(SSDNUM) ON DELETE CASCADE,
	CONSTRAINT FK_GB_COOLNUM FOREIGN KEY (COOLNUM) REFERENCES COOLER_B(COOLNUM) ON DELETE CASCADE,
	CONSTRAINT FK_GB_POWERNUM FOREIGN KEY (POWERNUM) REFERENCES POWER_B(POWERNUM) ON DELETE CASCADE,
	CONSTRAINT FK_GB_CASENUM FOREIGN KEY (CASENUM) REFERENCES CASE_B(CASENUM) ON DELETE CASCADE
);


CREATE TABLE MEMBER_B(
 	ID VARCHAR2(1000) PRIMARY KEY,
 	NAME VARCHAR2(1000) NOT NULL,
 	PW VARCHAR2(1000) NOT NULL,
 	EMAIL VARCHAR2(2000) UNIQUE,
 	ROLE VARCHAR2(10) NOT NULL,
 	CONSTRAINT MEMBER_ROLE_CHK CHECK( ROLE IN('Y','N'))
 	);
 	
 CREATE TABLE FAVPC_B(
	FAVNUM VARCHAR2(1000) PRIMARY KEY, 
	ID VARCHAR2(1000) NOT NULL,
	CPUNUM NUMBER NOT NULL,
	MBNUM NUMBER NOT NULL, 
	RAMNUM NUMBER NOT NULL,
	RAMAMOUNT NUMBER NOT NULL,
	GRAPHICNUM NUMBER NOT NULL, 
	SSDNUM NUMBER NOT NULL,
	COOLNUM NUMBER NOT NULL,
	POWERNUM NUMBER NOT NULL, 
	CASENUM NUMBER NOT NULL,
	TOTALPRICE NUMBER NOT NULL,
	CONSTRAINT FK_FAV_CPUNUM FOREIGN KEY (CPUNUM) REFERENCES CPU_B(CPUNUM) ON DELETE CASCADE,
	CONSTRAINT FK_FAV_MBNUM FOREIGN KEY (MBNUM) REFERENCES MAINBOARD_B(MBNUM) ON DELETE CASCADE,
	CONSTRAINT FK_FAV_RAMNUM FOREIGN KEY (RAMNUM) REFERENCES RAM_B(RAMNUM) ON DELETE CASCADE,
	CONSTRAINT FK_FAV_GRAPHICNUM FOREIGN KEY (GRAPHICNUM) REFERENCES GRAPHIC_B(GRAPHICNUM) ON DELETE CASCADE,
	CONSTRAINT FK_FAV_SSDNUM FOREIGN KEY (SSDNUM) REFERENCES SSD_B(SSDNUM) ON DELETE CASCADE,
	CONSTRAINT FK_FAV_COOLNUM FOREIGN KEY (COOLNUM) REFERENCES COOLER_B(COOLNUM) ON DELETE CASCADE,
	CONSTRAINT FK_FAV_POWERNUM FOREIGN KEY (POWERNUM) REFERENCES POWER_B(POWERNUM) ON DELETE CASCADE,
	CONSTRAINT FK_FAV_CASENUM FOREIGN KEY (CASENUM) REFERENCES CASE_B(CASENUM) ON DELETE CASCADE,
	CONSTRAINT FK_FAV_ID FOREIGN KEY (ID) REFERENCES MEMBER_B(ID) ON DELETE CASCADE
);


 	
CREATE TABLE BOARD(
	BOARDNUM NUMBER PRIMARY KEY,
	ID VARCHAR2(1000) NOT NULL,
	TITLE VARCHAR2(2000) NOT NULL,
	CONTENT VARCHAR2(4000) NOT NULL,
	REGDATE DATE NOT NULL,
	VCOUNT NUMBER NOT NULL,
	CONSTRAINT FK_BOARD_ID FOREIGN KEY (ID) REFERENCES MEMBER_B(ID) ON DELETE CASCADE
);


CREATE TABLE BOARDREPLY_B(
	BR_NUM NUMBER PRIMARY KEY,
	BOARDNUM NUMBER NOT NULL,
	ID VARCHAR2(1000) NOT NULL, 
 	CONTENT VARCHAR2(4000) NOT NULL,
	REGDATE DATE NOT NULL,
	CONSTRAINT FK_BOARDREPLY_ID FOREIGN KEY (ID) REFERENCES MEMBER_B(ID)  ON DELETE CASCADE,
	CONSTRAINT FK_BOARDREPLY_BOARDNUM FOREIGN KEY (BOARDNUM) REFERENCES BOARD(BOARDNUM) ON DELETE CASCADE
);


CREATE TABLE QNA_B(
	QNANUM NUMBER PRIMARY KEY, 
	ID VARCHAR2(1000) NOT NULL,
	Q_GPNUM NUMBER NOT NULL,
	Q_GPSEQ NUMBER NOT NULL,
	Q_TABLETAB NUMBER NOT NULL,
	TITLE VARCHAR2(2000) NOT NULL,
	CONTENT VARCHAR2(4000) NOT NULL,
	REGDATE DATE NOT NULL,
	VCOUNT NUMBER NOT NULL,
	CONSTRAINT FK_QNABOARD_ID FOREIGN KEY (ID) REFERENCES MEMBER_B(ID)  ON DELETE CASCADE
);
	
	
SELECT * FROM BOARDREPLY_B;

----------------------INSERT -----------------------------------

INSERT INTO CPU_B VALUES(CPU_SQ.NEXTVAL,'인텔 i3-10100k',150000,'CPU-01.jpg');
INSERT INTO CPU_B VALUES(CPU_SQ.NEXTVAL,'AMD 라이젠 3 3400',131000,'CPU-02.jpg');
INSERT INTO CPU_B VALUES(CPU_SQ.NEXTVAL,'인텔 i5-10400',218000,'CPU-03.jpg');
INSERT INTO CPU_B VALUES(CPU_SQ.NEXTVAL,'AMD 라이젠5 3500x',182000,'CPU-04.jpg');
INSERT INTO CPU_B VALUES(CPU_SQ.NEXTVAL,'AMD 라이젠5 3600',210000,'CPU-05.jpg');
INSERT INTO CPU_B VALUES(CPU_SQ.NEXTVAL,'AMD 라이젠7 3700x',347000,'CPU-06.jpg');
INSERT INTO CPU_B VALUES(CPU_SQ.NEXTVAL,'인텔 i7 10700k',459000,'CPU-07.jpg');
INSERT INTO CPU_B VALUES(CPU_SQ.NEXTVAL,'AMD 라이젠9 3900x',553000,'CPU-08.jpg');
INSERT INTO CPU_B VALUES(CPU_SQ.NEXTVAL,'AMD 라이젠9 3950x',897000,'CPU-09.jpg');
INSERT INTO CPU_B VALUES(CPU_SQ.NEXTVAL,'인텔 코어i9 10900k',984000,'CPU-10.jpg');

INSERT INTO MAINBOARD_B VALUES(MAINBOARD_SQ.NEXTVAL,'MSI A320M-A PRO',57000,'MAINBOARD-1.jpg');
INSERT INTO MAINBOARD_B VALUES(MAINBOARD_SQ.NEXTVAL,'ASRock H410M-HDV',82000,'MAINBOARD-2.jpg');
INSERT INTO MAINBOARD_B VALUES(MAINBOARD_SQ.NEXTVAL,'Asus Prime B450M-A',94000,'MAINBOARD-3.jpg');
INSERT INTO MAINBOARD_B VALUES(MAINBOARD_SQ.NEXTVAL,'MSI B450M 박격포',107000,'MAINBOARD-4.jpg');
INSERT INTO MAINBOARD_B VALUES(MAINBOARD_SQ.NEXTVAL,'ASUS TUF B450-PLUS GAMING STCOM',142000,'MAINBOARD-5.jpg');
INSERT INTO MAINBOARD_B VALUES(MAINBOARD_SQ.NEXTVAL,'MSI X570',202400,'MAINBOARD-6.jpg');
INSERT INTO MAINBOARD_B VALUES(MAINBOARD_SQ.NEXTVAL,'ASUS PRIME Z490M-EXTREME4',211000,'MAINBOARD-7.jpg');
INSERT INTO MAINBOARD_B VALUES(MAINBOARD_SQ.NEXTVAL,'ASUS ROG STRIX X570-F GAMING',375000,'MAINBOARD-8.jpg');
INSERT INTO MAINBOARD_B VALUES(MAINBOARD_SQ.NEXTVAL,'ASUS PRIME X470-PRO STCOM',432000,'MAINBOARD-9.jpg');
INSERT INTO MAINBOARD_B VALUES(MAINBOARD_SQ.NEXTVAL,'ASUS ROG MAXIMUS XII FORMULA',646000,'MAINBOARD-10.jpg');

INSERT INTO RAM_B VALUES(RAM_SQ.NEXTVAL,'삼성전자 DDR4 4G PC4-21300',16700,1,'MEMEORY-1.jpg');
INSERT INTO RAM_B VALUES(RAM_SQ.NEXTVAL,'삼성전자 DDR4 8G PC4-21300',31000,1,'MEMEORY-1.jpg');
INSERT INTO RAM_B VALUES(RAM_SQ.NEXTVAL,'삼성전자 DDR4 16G PC4-21300',62500,1,'MEMEORY-1.jpg');
INSERT INTO RAM_B VALUES(RAM_SQ.NEXTVAL,'G.SKILL TRIDENT Z 16GB',118000,1,'MEMEORY-7.jpg');
INSERT INTO RAM_B VALUES(RAM_SQ.NEXTVAL,'G.SKILL TRIDENT Z NEO C 16GB',120000,1,'MEMEORY-8.jpg');
INSERT INTO RAM_B VALUES(RAM_SQ.NEXTVAL,'CORSAIR VENGEANCE PRO 16G',132500,1,'MEMEORY-9.jpg');
INSERT INTO RAM_B VALUES(RAM_SQ.NEXTVAL,'G.SKILL TRIDENT Z ROYAL 16G',135000,1,'MEMEORY-10.jpg');

INSERT INTO SSD_B VALUES(SSD_SQ.NEXTVAL,'마이크론 Crucial BX500 240GB',33000,'SSD-1.jpg');
INSERT INTO SSD_B VALUES(SSD_SQ.NEXTVAL,'Seagate Maxtor z1(240GB)',47000,'SSD-2.jpg');
INSERT INTO SSD_B VALUES(SSD_SQ.NEXTVAL,'삼성전자 860 EVO (250GB)',53000,'SSD-3.jpg');
INSERT INTO SSD_B VALUES(SSD_SQ.NEXTVAL,'삼성전자 860 EVO (500GB)',94000,'SSD-3.jpg');
INSERT INTO SSD_B VALUES(SSD_SQ.NEXTVAL,'WD BLUE 3d SSD(500GB',80000,'SSD-4.jpg');
INSERT INTO SSD_B VALUES(SSD_SQ.NEXTVAL,'WD BLACK SN750 M.2',121000,'SSD-7.jpg');
INSERT INTO SSD_B VALUES(SSD_SQ.NEXTVAL,'삼성전자 970 EVO M.2 NVME(500GB)',115000,'SSD-8.jpg');
INSERT INTO SSD_B VALUES(SSD_SQ.NEXTVAL,'삼성전자 970 EVO M.2 NVME(1TB)',220000,'SSD-8.jpg');
INSERT INTO SSD_B VALUES(SSD_SQ.NEXTVAL,'CORSAIR Force Series MP600 M.2 (2TB)',686000,'SSD-10.jpg');

INSERT INTO GRAPHIC_B VALUES(GRAPHIC_SQ.NEXTVAL,'GTX 1050Ti 4GB',160000,'GPU-3.jpg');
INSERT INTO GRAPHIC_B VALUES(GRAPHIC_SQ.NEXTVAL,'GTX 1660 SUPER 6GB',315000,'GPU-4.jpg');
INSERT INTO GRAPHIC_B VALUES(GRAPHIC_SQ.NEXTVAL,'RTX 2060 SUPER 8GB',460000,'GPU-5.jpg');
INSERT INTO GRAPHIC_B VALUES(GRAPHIC_SQ.NEXTVAL,'GTX 2070 TI 8GB',482000,'GPU-6.jpg');
INSERT INTO GRAPHIC_B VALUES(GRAPHIC_SQ.NEXTVAL,'RTX 2070 SUPER 8GB',610000,'GPU-7.jpg');
INSERT INTO GRAPHIC_B VALUES(GRAPHIC_SQ.NEXTVAL,'RTX 2080 SUPER 8GB',1067000,'GPU-8.jpg');
INSERT INTO GRAPHIC_B VALUES(GRAPHIC_SQ.NEXTVAL,'RTX 2080 TI 11GB',1730000,'GPU-10.jpg');

INSERT INTO POWER_B VALUES(POWER_SQ.NEXTVAL,'마이크로닉스 ZERO POWER 400W',42000,'POWER-1.jpg');
INSERT INTO POWER_B VALUES(POWER_SQ.NEXTVAL,'마이크로닉스 Classic II 500W +12V Single Rail 85+',47000,'POWER-2.jpg');
INSERT INTO POWER_B VALUES(POWER_SQ.NEXTVAL,'마이크로닉스 Classic II 600W 80PLUS 230V EU 화이트',61000,'POWER-4.jpg');
INSERT INTO POWER_B VALUES(POWER_SQ.NEXTVAL,'ANTEC NeoECO NE650C 80PLUS BRONZE',72000,'POWER-5.jpg');
INSERT INTO POWER_B VALUES(POWER_SQ.NEXTVAL,'마이크로닉스 ASTRO 650W 80PLUS GOLD',95000,'POWER-6.jpg');
INSERT INTO POWER_B VALUES(POWER_SQ.NEXTVAL,'SEASONIC FOCUS GOLD GX-850 ',172000,'POWER-7.jpg');
INSERT INTO POWER_B VALUES(POWER_SQ.NEXTVAL,'ANTEC  HCG 850W 80PLUS GOLD ',176000,'POWER-8.jpg');
INSERT INTO POWER_B VALUES(POWER_SQ.NEXTVAL,'CORSAIR RM750 80PLUS GOLD',154000,'POWER-9.jpg');
INSERT INTO POWER_B VALUES(POWER_SQ.NEXTVAL,'SEASNIC PRIME TITANIUM TX-1000',449000,'POWER-10.jpg');

INSERT INTO COOLER_B VALUES(COOLER_SQ.NEXTVAL,'DEEPCOOL GAMER STORM ASSASSSIN 3',93000,'COOLER-4.jpg');
INSERT INTO COOLER_B VALUES(COOLER_SQ.NEXTVAL,'잘만 CNPS20X',119000,'COOLER-5.jpg');
INSERT INTO COOLER_B VALUES(COOLER_SQ.NEXTVAL,'NOCTUA NH-D15',136000,'COOLER-6.jpg');
INSERT INTO COOLER_B VALUES(COOLER_SQ.NEXTVAL,'NZXT KRAKEN X73',248000,'COOLER-7.jpg');
INSERT INTO COOLER_B VALUES(COOLER_SQ.NEXTVAL,'CORSAIR HYDRO J150I PRO XT',240000,'COOLER-9.jpg');
INSERT INTO COOLER_B VALUES(COOLER_SQ.NEXTVAL,'NZXT KRAKEN Z73',397000,'COOLER-10.jpg');

INSERT INTO CASE_B VALUES(CASE_SQ.NEXTVAL,'COX RC 170T', 16000,'CASE-1.jpg');
INSERT INTO CASE_B VALUES(CASE_SQ.NEXTVAL,'ABKO NCORE 픽셀', 18000,'CASE-2.jpg');
INSERT INTO CASE_B VALUES(CASE_SQ.NEXTVAL,'ABKO NCORE 식스팬 풀아크릴', 32000,'CASE-3.jpg');
INSERT INTO CASE_B VALUES(CASE_SQ.NEXTVAL,'잘만 N5-MF', 34000,'CASE-4.jpg');
INSERT INTO CASE_B VALUES(CASE_SQ.NEXTVAL,'BRAVOTEC 트레저 X8 850M 타이탄 글래스', 74000,'CASE-5.jpg');
INSERT INTO CASE_B VALUES(CASE_SQ.NEXTVAL,'NZXT H510', 106000,'CASE-6.jpg');
INSERT INTO CASE_B VALUES(CASE_SQ.NEXTVAL,'리안리 PC-011 DyNamic RAZER', 230000,'CASE-7.jpg');
INSERT INTO CASE_B VALUES(CASE_SQ.NEXTVAL,'NZXT H710i', 240000,'CASE-8.jpg');
INSERT INTO CASE_B VALUES(CASE_SQ.NEXTVAL,'Phanteks Enthoo LUXE TG BK', 250000,'CASE-9.jpg');
INSERT INTO CASE_B VALUES(CASE_SQ.NEXTVAL,'ANTEC TORQUE', 340000,'CASE-10.jpg');

INSERT INTO GUIDE_B VALUES('저1',1,1,2,1,null,1,null,1,1,329000);
INSERT INTO GUIDE_B VALUES('저2',2,2,1,2,null,2,null,2,2,358400);
INSERT INTO GUIDE_B VALUES('저3',3,4,1,2,1,3,null,2,3,637400);
INSERT INTO GUIDE_B VALUES('중1',4,4,2,2,2,4,1,3,4,948000);
INSERT INTO GUIDE_B VALUES('중2',5,5,2,2,3,5,2,4,5,1219000);
INSERT INTO GUIDE_B VALUES('중3',6,6,3,2,4,4,3,5,6,1615000);
INSERT INTO GUIDE_B VALUES('고1',7,7,4,2,5,6,4,6,7,2287000);
INSERT INTO GUIDE_B VALUES('고2',8,8,5,2,6,7,4,7,8,3014000);
INSERT INTO GUIDE_B VALUES('고3',9,9,6,2,6,8,5,8,9,3525000);
INSERT INTO GUIDE_B VALUES('하이엔드',10,10,7,4,7,9,6,9,10,5772000);


--------- 확인  -----------

SELECT * FROM RAM_B;
SELECT * FROM CPU_B;
SELECT * FROM MAINBOARD_B;
SELECT * FROM SSD_B;
SELECT * FROM GRAPHIC_B;
SELECT * FROM POWER_B;
SELECT * FROM COOLER_B;
SELECT * FROM CASE_B;
SELECT * FROM GUIDE_B;

------------- view ------------

CREATE OR REPLACE VIEW V_ALLPARTS
AS SELECT GB.GUIDE GUIDE, CP.NAME CPU, CP.PRICE CPU_PRICE, CP.PIC CPU_PIC,
		MB.NAME MAINBOARD, MB.PRICE MAIN_PRICE, MB.PIC MAINBOARD_PIC, 
		RM.NAME RAM, GB.RAMAMOUNT RAM_AMOUNT, RM.PRICE RAM_PRICE, RM.PIC RAM_PIC,
		GP.NAME GPU, GP.PRICE GPU_PRICE, GP.PIC GPU_PIC,
		SD.NAME SSD, SD.PRICE SSD_PRICE, SD.PIC SSD_PIC,
		CL.NAME COOLER, CL.PRICE COOLER_PRICE, CL.PIC COOLER_PIC,
		PW.NAME POWER, PW.PRICE POWER_PRICE, PW.PIC POWER_PIC,
		CS.NAME CASE, CS.PRICE CASE_PRICE, CS.PIC CASE_PIC
	
FROM GUIDE_B GB

JOIN CPU_B CP USING(CPUNUM)
JOIN MAINBOARD_B MB USING(MBNUM)
JOIN RAM_B RM USING(RAMNUM)
LEFT OUTER JOIN GRAPHIC_B GP USING(GRAPHICNUM)
JOIN SSD_B SD USING(SSDNUM)
LEFT OUTER JOIN  COOLER_B CL USING(COOLNUM)
JOIN POWER_B PW USING(POWERNUM)
JOIN CASE_B CS USING(CASENUM);


--- view 보기------------
SELECT * FROM V_ALLPARTS;







