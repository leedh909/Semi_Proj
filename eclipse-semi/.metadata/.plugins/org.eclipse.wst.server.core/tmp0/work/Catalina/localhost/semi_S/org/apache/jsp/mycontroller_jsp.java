/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.36
 * Generated at: 2020-07-14 03:11:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.board.dto.BoardDto;
import com.board.dao.BoardDao;
import java.util.List;

public final class mycontroller_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.board.dto.BoardDto");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.board.dao.BoardDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	request.setCharacterEncoding("UTF-8");

      out.write('\r');
      out.write('\n');

	response.setContentType("text/html; charset=UTF-8");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	String command = request.getParameter("command");
	
	System.out.println("[command: "+command+"]");
	
	BoardDao dao = new BoardDao();
	
	if(command.equals("boardlist")){
		
		List<BoardDto> list = dao.selectAll();
		
		request.setAttribute("allList", list);
		pageContext.forward("boardlist.jsp");

		/*
	페이지의 흐름을 제어
	-포워드 : request, response가 유지
		1) requestDispatcher 이용
		2) <jsp:forward>
		3) pageContext.forward()
	-리다이렉트 : 새로운 request, response
		1) response.sendRedirect()
		*/
		
	}else if(command.equals("boarddetail")){
		//1. 파라미터로 넘어오는 seq 처리
		//2. dao를 이용하여 data처리
		//3. 페이지 처리(boarddetail.jsp : jsp02의 detail페이지와 같은 양식으로 작성)
		
		int seq = Integer.parseInt(request.getParameter("seq"));
		
		BoardDto dto = dao.selectone(seq);
		
		request.setAttribute("selectone", dto);
		pageContext.forward("boarddetail.jsp");
		
		
	}else if(command.equals("boardinsertform")){
		response.sendRedirect("boardinsert.jsp");
		//값을 넘기지 않고 페이지만 이동하겠다.

	}else if(command.equals("boardinsert")){
		
		String writer = request.getParameter("writer");
		String title = request.getParameter("title");
		String content = request.getParameter("content");
		
		BoardDto dto = new BoardDto(writer,title,content);
		
		int res = dao.insert(dto);
		
		if(res>0){

      out.write("\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\talert(\"글 작성 성공!!\");\r\n");
      out.write("\t\t\tlocation.href=\"mycontroller.jsp?command=boardlist\";\r\n");
      out.write("\t\t</script>\t\t\t\r\n");

				}else{
			
      out.write("\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\talert(\"글 작성 실패!!\");\r\n");
      out.write("\t\t\t/* location.href=\"mycontroller.jsp?command=boardinsertform\"; */\r\n");
      out.write("\t\t</script>\r\n");

	response.sendRedirect("mycontroller.jsp?command=boardinsertform");
		}
		
		
	}else if(command.equals("boardupdateform")){
		
		int seq = Integer.parseInt(request.getParameter("seq"));
		
		BoardDto dto = dao.selectone(seq);
		
		request.setAttribute("dto", dto);
		pageContext.forward("boardupdate.jsp");
		
		
	}else if(command.equals("boardupdate")){
		
		int seq = Integer.parseInt(request.getParameter("seq"));
		String title = request.getParameter("title");
		String content = request.getParameter("content");
		
		
		BoardDto dto = new BoardDto();
		dto.setSeq(seq);
		dto.setTitle(title);
		dto.setContent(content);
		
		int res = dao.update(dto);
		
		if(res>0){

      out.write("\r\n");
      out.write("\t\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t\talert(\"글 수정 성공!!\");\r\n");
      out.write("\t\t\t\tlocation.href=\"mycontroller.jsp?command=boarddetail&seq=\"+");
      out.print(seq);
      out.write(";\r\n");
      out.write("\t\t\t</script>\r\n");
 
		}else{

      out.write("\r\n");
      out.write("\t\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t\talert(\"글 수정 실패!!\");\r\n");
      out.write("\t\t\t\tlocation.href=\"mycontroller.jsp?command=boardupdateform&seq=\"+");
      out.print(seq);
      out.write(";\r\n");
      out.write("\t\t\t</script>\r\n");
 			
		}
		
	}else if(command.equals("boarddelete")){
		
		int seq = Integer.parseInt(request.getParameter("seq"));
		
		int res = dao.delete(seq);
		
		if(res>0){

      out.write("\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\talert(\"글 삭제 성공\");\r\n");
      out.write("\t\t\tlocation.href=\"mycontroller.jsp?command=boardlist\";\r\n");
      out.write("\t\t</script>\r\n");
		
		}else{

      out.write("\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\talert(\"글 삭제 실패\");\r\n");
      out.write("\t\t\tlocation.href=\"mycontroller.jsp?command=boarddetail&seq=\"");
      out.print(seq);
      out.write(";\r\n");
      out.write("\t\t</script>\r\n");
		
			
		}
		
	}else if(command.equals("muldel")){
		
		String[] seq = request.getParameterValues("chk");
		
		int res = dao.muldel(seq);
		
		if(res>0){

      out.write("\r\n");
      out.write("\t\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t\talert(\"정상적으로 삭제되었습니다.\");\r\n");
      out.write("\t\t\t\tlocation.href=\"mycontroller.jsp?command=boardlist\";\r\n");
      out.write("\t\t\t</script>\r\n");
 
			
			
		}else{
			

      out.write("\r\n");
      out.write("\t\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t\talert(\"삭제가 실패하였습니다.\");\r\n");
      out.write("\t\t\t\tlocation.href=\"mycontroller.jsp?command=boardlist\";\r\n");
      out.write("\t\t\t</script>\r\n");

			
		}
		
	}
	
	
	

      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
